version: "3.8"

services:
  newsletter:
    build: .
    restart: unless-stopped
    ports:
      - 8000:8000
    command: uvicorn main:app --host 0.0.0.0 --reload
    environment:
      - CELERY_BROKER_URL=redis://redis:6379/0
      - CELERY_RESULT_BACKEND=redis://redis:6379/0
      - DB_HOST=${RDS_HOST}
      - DB_PORT=${RDS_PORT}
      - DB_NAME=${RDS_NAME}
      - DB_USER=${MASTER_USERNAME}
      - DB_PASSWORD=${MASTER_PASSWORD}
    depends_on:
      - redis
    networks:
      - backend_network

  worker:
    build: .
    restart: unless-stopped
    command: celery -A app worker --loglevel=info
    environment:
      - CELERY_BROKER_URL=redis://redis:6379/0
      - CELERY_RESULT_BACKEND=redis://redis:6379/0
      - DB_HOST=${RDS_HOST}
      - DB_PORT=${RDS_PORT}
      - DB_NAME=${RDS_NAME}
      - DB_USER=${MASTER_USERNAME}
      - DB_PASSWORD=${MASTER_PASSWORD}
    depends_on:
      - newsletter
      - redis
    networks:
      - backend_network

  celery_beat:
    build: .
    restart: unless-stopped
    command: celery -A app beat --loglevel=info
    environment:
      - CELERY_BROKER_URL=redis://redis:6379/0
      - CELERY_RESULT_BACKEND=redis://redis:6379/0
      - DB_HOST=${RDS_HOST}
      - DB_PORT=${RDS_PORT}
      - DB_NAME=${RDS_NAME}
      - DB_USER=${MASTER_USERNAME}
      - DB_PASSWORD=${MASTER_PASSWORD}
    depends_on:
      - redis
    networks:
      - backend_network

  redis:
    image: redis:latest
    restart: unless-stopped
    container_name: redis_newsletter
    networks:
      - backend_network
    ports:
      - "6379:6379"

networks:
  backend_network:
    driver: bridge

volumes:
  mysql_data:
    driver: local
